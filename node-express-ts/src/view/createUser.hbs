<style>
  .border-input{
    border-color : coral !important;
  }
  .input-notification{
    margin-top: 5px;
    color: coral;
  }
</style>
<form action="/user" method="POST">
  <div class="form-group row">
    <label for="userId" class="col-sm-2 col-form-label">Mã người dùng</label>
    <div class="col-sm-10 userId">
      <input type="text" class="form-control" id="userId" placeholder="Mã người dùng" name="userId">
    </div>
  </div>
  <div class="form-group row">
    <label for="full_name" class="col-sm-2 col-form-label">Tên người dùng</label>
    <div class="col-sm-10 full_name">
      <input type="text" class="form-control" id="full_name" placeholder="Tạ Tuấn Huy" name="full_name">
    </div>
  </div>
  <div class="form-group row">
    <label for="phone" class="col-sm-2 col-form-label">Số điện thoại</label>
    <div class="col-sm-10 phone">
      <input type="text" class="form-control" id="phone" placeholder="0886223506" name="phone">
    </div>
  </div>
  <div class="form-group row">
    <label for="address" class="col-sm-2 col-form-label">Địa chỉ</label>
    <div class="col-sm-10 address">
      <input type="text" class="form-control" id="address" placeholder="Lào Cai" name="address">
    </div>
  </div>
  <div class="form-group row">
    <label for="age" class="col-sm-2 col-form-label">Tuổi</label>
    <div class="col-sm-10 age">
      <input type="number" class="form-control" id="age" placeholder="18" name="age">
    </div>
  </div>
  <div class="form-group row">
    <label for="age" class="col-sm-2 col-form-label">Chọn giới tính</label>
    <div class="col-sm-10">
        <select name="sex" class="form-control">
            <option value = "Nam">Nam</option>
            <option value = "Nữ">Nữ</option>
            <option value = "Khác">Khác</option>
        </select>
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-10">
      <button type="submit" class="btn btn-primary">Tạo Mới</button>
    </div>
  </div>
</form>

<script>
  class Validate{
    constructor(element ,value, minlenght, maxLenght, regex ,message,){
        this.element = element,
        this.value = value,
        this.minLenght = minlenght,
        this.maxLenght = maxLenght,
        this.regex = regex,
        this.message = message
    }
 }

 const userId = new Validate('userId','',3, 16, /[A-Za-z0-9 ]|\s/g , 'Mã người dùng có thể bao gồm cả chữ cả số và chữ hoa')
  
 const fullName = new Validate('full_name','',3, 16, /[A-Za-z ]|\s/g , 'Tên người dùng phải có thể  chữ viết hoa hoặc không')

 const phone = new Validate('phone','',10, 10, /[0-9]|\s/g , 'Sô điện thoại có 10 số')

 const address = new Validate('address','',3, 100, /[A-Za-z ]|\s/g , 'Nhập lại tên địa chỉ của bạn')


 const age = new Validate('age ','',1, 3, /[0-9]|\s/g , 'Nhập lại tuổi của bạn')

 validateElement(userId)
 validateElement(fullName)
 validateElement(phone)
 validateElement(address)
 validateElement(age)

function validateElement(user){
    let inputItem = document.querySelector('.'+user.element)
    const element = document.querySelector('#'+user.element)

    //tạo cảnh báo
    let notification = document.createElement('div')
    notification.classList.add('input-notification')
    notification.innerHTML = user.message

    element.onblur = () => {
        const elementValue = element.value.trim() 
        const regex = user.regex
        let checkLenghtRegex = 0

        //kiểm tra lấy đô dài của chuỗi regex
        if(regex){
            checkLenghtRegex = elementValue.match(regex)
            checkLenghtRegex == null ? checkLenghtRegex : checkLenghtRegex = checkLenghtRegex.length
        }
    
        //check chuỗi regex với chuỗi Input
        if(elementValue.length == 0 || elementValue.length < user.minLenght || elementValue.length > user.maxLenght 
            || elementValue.match(user.regex) === null || checkLenghtRegex < elementValue.length )
        {
            element.value = ''
            inputItem.appendChild(notification)
            element.classList.add('border-input')
        }
    }

    element.onkeydown= () => {
        notification.remove()
        element.classList.remove('border-input')
    }
}

</script>